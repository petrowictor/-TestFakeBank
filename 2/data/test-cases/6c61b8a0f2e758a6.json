{"uid":"6c61b8a0f2e758a6","name":"Delete operation","fullName":"tests.test_operations.TestOperations#test_delete_operation","historyId":"0932c0c463dfafe899342065f1d338e4","time":{"start":1757611964108,"stop":1757611964238,"duration":130},"status":"failed","statusMessage":"AssertionError: Incorrect response status code. Expected status code: 404. Actual status code: 200","statusTrace":"self = <test_operations.TestOperations object at 0x7f660b01f410>\noperations_client = <clients.operations_client.OperationsClient object at 0x7f660ae53890>\nfunction_operation = OperationSchema(debit=-11.3173924, credit=85.4937914136, category='beauty', description='Factor technology for unit after power.', transaction_date=datetime.date(2025, 8, 15), id=2682)\n\n    @allure.title(\"Delete operation\")\n    def test_delete_operation(\n            self,\n            operations_client: OperationsClient,\n            function_operation: OperationSchema\n    ):\n        delete_response = operations_client.delete_operation_api(function_operation.id)\n        assert_status_code(delete_response.status_code, HTTPStatus.OK)\n    \n        # Дополнительная проверка: убеждаемся, что операция действительно удалена\n        get_response = operations_client.get_operation_api(function_operation.id)\n>       assert_status_code(get_response.status_code, HTTPStatus.NOT_FOUND)\n\ntests/test_operations.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactual = 200, expected = <HTTPStatus.NOT_FOUND: 404>\n\n    @allure.step(\"Check that response status code equals to {expected}\")\n    def assert_status_code(actual: int, expected: int):\n        \"\"\"\n        Проверяет, что HTTP-статус ответа соответствует ожидаемому.\n    \n        :param: actual (int): Фактический статус-код.\n        :param: expected (int): Ожидаемый статус-код.\n        :raises: AssertionError: Если статус-коды не совпадают.\n        \"\"\"\n        logger.info(f\"Check that response status code equals to {expected}\")\n    \n>       assert actual == expected, (\n               ^^^^^^^^^^^^^^^^^^\n            f'Incorrect response status code. '\n            f'Expected status code: {expected}. '\n            f'Actual status code: {actual}'\n        )\nE       AssertionError: Incorrect response status code. Expected status code: 404. Actual status code: 200\n\ntools/assertions/base.py:21: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757611963338,"stop":1757611963340,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"settings","time":{"start":1757611963340,"stop":1757611963341,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"operations_client","time":{"start":1757611963930,"stop":1757611963952,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"function_operation","time":{"start":1757611963952,"stop":1757611964108,"duration":156},"status":"passed","steps":[{"name":"Create operation","time":{"start":1757611963952,"stop":1757611964108,"duration":156},"status":"passed","steps":[{"name":"Make POST request to '/fakebank/accounts'","time":{"start":1757611963953,"stop":1757611964108,"duration":155},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/fakebank/accounts'"},{"name":"json","value":"{'debit': -11.3173924, 'credit': 85.4937914136, 'category': 'beauty', 'description': 'Factor technology for unit after power.', 'transactionDate': '2025-08-15'}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"operation","value":"CreateOperationSchema(debit=-11.3173924, credit=85.4937914136, category='beauty', description='Factor technology for unit after power.', transaction_date=datetime.date(2025, 8, 15))"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Incorrect response status code. Expected status code: 404. Actual status code: 200","statusTrace":"self = <test_operations.TestOperations object at 0x7f660b01f410>\noperations_client = <clients.operations_client.OperationsClient object at 0x7f660ae53890>\nfunction_operation = OperationSchema(debit=-11.3173924, credit=85.4937914136, category='beauty', description='Factor technology for unit after power.', transaction_date=datetime.date(2025, 8, 15), id=2682)\n\n    @allure.title(\"Delete operation\")\n    def test_delete_operation(\n            self,\n            operations_client: OperationsClient,\n            function_operation: OperationSchema\n    ):\n        delete_response = operations_client.delete_operation_api(function_operation.id)\n        assert_status_code(delete_response.status_code, HTTPStatus.OK)\n    \n        # Дополнительная проверка: убеждаемся, что операция действительно удалена\n        get_response = operations_client.get_operation_api(function_operation.id)\n>       assert_status_code(get_response.status_code, HTTPStatus.NOT_FOUND)\n\ntests/test_operations.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactual = 200, expected = <HTTPStatus.NOT_FOUND: 404>\n\n    @allure.step(\"Check that response status code equals to {expected}\")\n    def assert_status_code(actual: int, expected: int):\n        \"\"\"\n        Проверяет, что HTTP-статус ответа соответствует ожидаемому.\n    \n        :param: actual (int): Фактический статус-код.\n        :param: expected (int): Ожидаемый статус-код.\n        :raises: AssertionError: Если статус-коды не совпадают.\n        \"\"\"\n        logger.info(f\"Check that response status code equals to {expected}\")\n    \n>       assert actual == expected, (\n               ^^^^^^^^^^^^^^^^^^\n            f'Incorrect response status code. '\n            f'Expected status code: {expected}. '\n            f'Actual status code: {actual}'\n        )\nE       AssertionError: Incorrect response status code. Expected status code: 404. Actual status code: 200\n\ntools/assertions/base.py:21: AssertionError","steps":[{"name":"Delete operation by id 2682","time":{"start":1757611964109,"stop":1757611964176,"duration":67},"status":"passed","steps":[{"name":"Make DELETE request to '/fakebank/accounts/2682'","time":{"start":1757611964109,"stop":1757611964176,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/fakebank/accounts/2682'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"operation_id","value":"2682"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that response status code equals to <HTTPStatus.OK: 200>","time":{"start":1757611964176,"stop":1757611964176,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"200"},{"name":"expected","value":"<HTTPStatus.OK: 200>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Get operation by id 2682","time":{"start":1757611964176,"stop":1757611964237,"duration":61},"status":"passed","steps":[{"name":"Make GET request to '/fakebank/accounts/2682'","time":{"start":1757611964176,"stop":1757611964237,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/fakebank/accounts/2682'"},{"name":"params","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"operation_id","value":"2682"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Check that response status code equals to <HTTPStatus.NOT_FOUND: 404>","time":{"start":1757611964237,"stop":1757611964237,"duration":0},"status":"failed","statusMessage":"AssertionError: Incorrect response status code. Expected status code: 404. Actual status code: 200\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/-TestFakeBank/-TestFakeBank/tools/assertions/base.py\", line 21, in assert_status_code\n    assert actual == expected, (\n           ^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"200"},{"name":"expected","value":"<HTTPStatus.NOT_FOUND: 404>"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4504247032b8cb5e","name":"log","source":"4504247032b8cb5e.txt","type":"text/plain","size":1064}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"function_operation::0","time":{"start":1757611964269,"stop":1757611964346,"duration":77},"status":"passed","steps":[{"name":"Delete operation by id 2682","time":{"start":1757611964270,"stop":1757611964346,"duration":76},"status":"passed","steps":[{"name":"Make DELETE request to '/fakebank/accounts/2682'","time":{"start":1757611964270,"stop":1757611964346,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/fakebank/accounts/2682'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"operation_id","value":"2682"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"operations"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_operations"},{"name":"subSuite","value":"TestOperations"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2110-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_operations"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["operations","regression"]},"source":"6c61b8a0f2e758a6.json","parameterValues":[]}